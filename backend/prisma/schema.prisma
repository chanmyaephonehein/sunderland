// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model Users {
  id                Int                @id @default(autoincrement())
  email             String             @unique
  password          String
  loginAttempts     Int                @default(0)
  lockUntil         DateTime?          // Nullable, only set when locked
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @default(now()) @updatedAt
  resetToken        String?            // Token for password reset, nullable
  resetTokenExpiry  DateTime?          // Expiry time for the reset token, nullable
  PasswordHistory   PasswordHistory[]
  verify            Boolean            @default(false)
  twoStepCode       Int                @default(0)// Token for 2 factor mail, nullable
  codeExpiresAt     DateTime?          // Expriry time for the two steo code, nullable
}

model PasswordHistory {
  id             Int       @id @default(autoincrement())
  password       String
  userId         Int
  users          Users     @relation(fields: [userId], references: [id])
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @default(now()) @updatedAt
}

model EmailVerifications {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
}

